/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <12 38>;
        };
    };

    behaviors {
        shift_caps_lock: shift_caps_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_LOCK";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_SHIFT>,
                <&kp CAPSLOCK>;

            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
      &kp ESCAPE  &kp Q  &kp W     &kp E   &kp R          &kp T        &kp Y      &kp U      &kp I    &kp O     &kp P      &kp EQUAL
&shift_caps_lock  &kp A  &kp S     &kp D   &kp F          &kp G        &kp H      &kp J      &kp K    &kp L  &kp SEMI        &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X     &kp C   &kp V          &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_ALT
                                &kp LGUI  &tog 1  &kp BACKSPACE    &kp SPACE  &kp ENTER    &kp TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans           &none    &kp UP_ARROW            &none   &none   &none    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none  &none   &none
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &none   &none    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &none   &none
&trans           &none           &none            &none   &none   &none    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none  &trans
                                                 &trans  &tog 2  &trans    &kp NUMBER_0         &none       &kp DOT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR      &none
&trans     &none   &none     &none     &none      &none    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&trans     &none   &none     &none     &none      &none    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                            &trans    &tog 0     &trans       &trans     &trans           &trans
            >;
        };
    };
};
