/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <12 37>;
            layers = <0>;
        };
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TAB_ESC";
            #binding-cells = <0>;
            bindings =
                <&kp TAB>,
                <&kp ESC>;
        };
        ht0: hold_tap_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_LAYERS";
            bindings =
                <&mo>,
                <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "qwerty";
            bindings = <
                   &td0  &kp Q  &kp W     &kp E          &kp R     &kp T       &kp Y      &kp U      &kp I    &kp O     &kp P      &kp EQUAL
&mt LEFT_SHIFT CAPSLOCK  &kp A  &kp S     &kp D          &kp F     &kp G       &kp H      &kp J      &kp K    &kp L  &kp SEMI        &kp SQT
       &kp LEFT_CONTROL  &kp Z  &kp X     &kp C          &kp V     &kp B       &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_ALT
                                       &kp LGUI  &kp BACKSPACE  &ht0 1 3    &ht0 2 2  &kp SPACE  &kp ENTER
            >;
        };

        layer_1 {
            label = "mod-vi";
            bindings = <
&trans         &none         &none           &none      &none   &none    &kp LC(C)      &kp LC(Z)    &kp LC(X)  &kp LC(Y)  &kp LC(P)  &kp DELETE
&trans  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LCTRL   &none     &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT      &none      &trans
&trans         &none         &none           &none      &none   &none     &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END      &none      &trans
                                            &trans     &trans  &trans       &trans         &trans       &trans
            >;
        };

        layer_2 {
            label = "bt-sym";
            bindings = <
&kp ESCAPE      &kp EXCL        &kp AT      &kp HASH      &kp DLLR     &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTERISK  &kp LPAR   &kp RPAR  &kp EQUAL
    &trans        &trans        &trans        &trans        &trans        &trans    &kp MINUS  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE     &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp UNDER  &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE     &trans
                                              &trans        &trans        &trans       &trans    &trans        &trans
            >;
        };

        layer_3 {
            label = "wasd-num";
            bindings = <
&trans           &none    &kp UP_ARROW            &none   &none   &none    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_SUBTRACT    &kp KP_DIVIDE  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &none   &none    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6      &kp KP_PLUS  &kp KP_MULTIPLY  &trans
&trans           &none           &none            &none   &none   &none    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3        &kp ENTER            &none  &trans
                                                 &trans  &trans  &trans          &trans        &trans       &kp DOT
            >;
        };
    };
};
